[2019-11-02 21:35:01,359] TRACE [Controller id=0 epoch=109] Sending UpdateMetadata request PartitionState(controllerEpoch=103, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition login_user-0 (state.change.logger)
[2019-11-02 21:35:01,395] ERROR [Controller id=0 epoch=109] Controller 0 epoch 109 failed to change state for partition login_user-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition login_user-0 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:328)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:326)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:326)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:254)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:175)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:116)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:106)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:62)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$elect(KafkaController.scala:1203)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1479)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:69)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:69)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:69)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:68)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
